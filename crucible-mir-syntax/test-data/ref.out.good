(defun @test-ref () MirReference
   (start start:
      (let r (ref-new (Bitvector 8)))
      (let v-expected (bv 8 42))
      (ref-write (Bitvector 8) r v-expected)
      (let v-actual (ref-read (Bitvector 8) r))
      (assert! (equal? v-expected v-actual) "load of stored value")
      (ref-drop r)
      (return r)))

test-ref
%0
  % 3:12
  $0 = newMirRef (Bitvector 8)
  % 4:21
  $1 = bVLit(8, BV 42)
  % 5:5
  $2 = writeMirRef $0 <- $1
  % 6:19
  $3 = readMirRef $0
  % 7:14
  $4 = baseIsEq(BaseBVRepr 8, $1, $3)
  % 7:43
  $5 = stringLit("load of stored value")
  % 7:5
  assert($4, $5)
  % 8:5
  $6 = dropMirRef $0
  % 10:5
  return $0
  % no postdom
