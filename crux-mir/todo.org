TODO

- translation of Slice types isn't compositional (requires identifying outer ref)
      
  M.TyRef (M.TySlice t) M.Immut -> tyToReprCont t $ \repr -> Some (CT.VectorRepr repr)
  M.TyRef (M.TySlice t) M.Mut   -> tyToReprCont t $ \repr -> Some (MirSliceRepr repr)

  This could be problemmatic if we ever need to substitute a slice type into 
  M.TyRef (M.TyParam 0).

  Should explore other options.

- minimal standard library: lacking slices, iteration, vectors, type conversions, etc.

  affected tests:
    array/wick1.rs - "vec::with_capacity"
    array/wick3.rs - "vec::with_capacity"
    slice/get.rs   - "get_mut"
    prim/lit.rs    (string len)


- failing symbolic test cases

  This one passes:
    symb_eval/crypto/double.rs
  
  These do not:
    symb_eval/crypto/ffs.rs
    symb_eval/crypto/bytes.rs

  It may be a matter of the translation of primitive
  operators. However, I'm not sure how to get crucible to tell me
  about any counter-examples that it produces.

- Mutable reference-taken variable not backed by reference!
   stdlib/result-interior

- need definitions of intrinsics:

   https://github.com/rust-lang/rust/blob/master/src/libcore/intrinsics.rs

   (Though look for the functions that wrap them, which are more stable.)


- dynamic trait invocation (i.e. trait objects) (test/conc_eval/traits/dynamic*.rs)
   + a "trait object" is a value (coerced to Any) accompanied by its vtable. However, we need to make a coerced 
     version of that vtable so that it can take arguments of type "Any" instead of the implementation type. 
     This requires allocating a bunch of function handles for the wrapped vtable (one for each implementation type)

- better interface to symbolic evaluation.  need a rust interface module for examples to import
  and need to load the definitions in mir-verifier.

- prim/shift_exceeding.rs


WAITING ON MIR-JSON

- parsing of constants
   crypto/add.rs

- static traits with members that do not mention Self (traits/static, traits/static_two.rs)
   mir-json open issue #4


MADE SOME PROGRESS

- fix crucible-syntax. (Broke David's work in git rebase, ugh)
   + now compiles, don't know how to test it though.

FIXED

- test/conc_eval/traits/subtrait.rs
- refactor doCustomCall 
- no default methods in traits
- translate associated types into extra type parameters
- cannot assign to mutable function parameter 
   array/arg.rs
   prim/ffs.rs
