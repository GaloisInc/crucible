name: crucible-jvm builds
on:
  push:
    branches: [master, "release-**"]
  pull_request:
  workflow_dispatch:

# The CACHE_VERSION can be updated to force the use of a new cache if
# the current cache contents become corrupted/invalid.  This can
# sometimes happen when (for example) the OS version is changed but
# older .so files are cached, which can have various effects
# (e.g. cabal complains it can't find a valid version of the "happy"
# tool).
#
# This also periodically happens on MacOS builds due to a tar bug
# (symptom: "No suitable image found ... unknown file type, first
# eight bytes: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00")
env:
  CACHE_VERSION: 1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.allow-failure }}
    env:
      CI_TEST_LEVEL: "1"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] # , macos-10.15] # , windows-latest]
        ghc: ["8.6.5", "8.8.4", "8.10.7"]
        allow-failure: [false]
        include:
          - os: macos-10.15
            ghc: 8.6.5
            allow-failure: true
          - os: macos-10.15
            ghc: 8.8.4
            allow-failure: true
          - os: macos-10.15
            ghc: 8.10.7
            allow-failure: true
        # Windows only seems to work on 8.6.5. Others result in
        # segfaults or other internal errors.
        exclude:
          - os: windows-latest
            ghc: 8.10.7
          - os: windows-latest
            ghc: 8.8.4
    name: crucible-jvm - GHC v${{ matrix.ghc }} - ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: haskell/actions/setup@v1
        id: setup-haskell
        with:
          ghc-version: ${{ matrix.ghc }}

      - uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=channel:nixos-20.09
      - uses: actions/cache@v2
        name: Cache cabal store
        with:
          path: |
            ${{ steps.setup-haskell.outputs.cabal-store }}
            dist-newstyle
          key: ${{ env.CACHE_VERSION }}-cabal-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles(format('cabal.GHC-{0}.config', matrix.ghc)) }}-${{ github.sha }}
          restore-keys: |
            ${{ env.CACHE_VERSION }}-cabal-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles(format('cabal.GHC-{0}.config', matrix.ghc)) }}-

      - shell: bash
        run: .github/ci.sh install_system_deps
        env:
          SOLVER_PKG_VERSION: "snapshot-20210917"
          BUILD_TARGET_OS: ${{ matrix.os }}

      - name: Setup Environment Vars
        run: |
          GHC=haskell.compiler.ghc$(echo ${{ matrix.ghc }} | sed -e s,\\.,,g)
          echo GHC=$GHC >> $GITHUB_ENV

      - name: Package's Cabal/GHC compatibility
        shell: bash
        if: runner.os == 'Linux'
        # Using setup will use the cabal library installed with GHC
        # instead of the cabal library of the Cabal-install tool to
        # verify the cabal file is compatible with the associated
        # GHC cabal library version.  Cannot run configure or build,
        # because dependencies aren't present, but a clean is
        # sufficient to cause parsing/validation of the cabal file.
        run: |
          defsetup()  { echo import Distribution.Simple; echo main = defaultMain; }
          setup_src() { if [ ! -f Setup.hs ] ; then defsetup > DefSetup.hs; fi; ls *Setup.hs; }
          setup_bin() { echo setup.${{ matrix.ghc }}; }
          with_ghc()  { nix-shell -p $GHC --run "$(echo ${@})"; }
          (cd crucible-jvm; with_ghc ghc -o $(setup_bin) $(setup_src) && ./$(setup_bin) clean)
      - run: cabal update
      - run: cabal configure crucible-jvm --enable-tests
      - name: Linux build
        if: runner.os == 'Linux'
        run: cabal build exe:crucible-jvm
      - name: MacOS build
        if: runner.os == 'macOS'
        # has a clean and retry in case the linking cache is bad (seems to happen frequently with macos).
        shell: bash
        run: |
          cabal build exe:crucible-jvm || { cabal clean; cabal build exe:crucible-jvm; }
